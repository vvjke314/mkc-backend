basePath: /
definitions:
  app.AuthToken:
    properties:
      token:
        type: string
    type: object
  app.errorResponse:
    properties:
      message:
        type: string
    type: object
  app.successResponse:
    properties:
      message:
        type: string
    type: object
  ds.AddParticipantReq:
    properties:
      customer_access:
        type: string
      email:
        type: string
    type: object
  ds.CreateNoteReq:
    properties:
      content:
        type: string
      deadline:
        type: string
      title:
        type: string
    type: object
  ds.CreateProjectReq:
    properties:
      name:
        type: string
    type: object
  ds.Customer:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      login:
        type: string
      password:
        type: string
      second_name:
        type: string
      type:
        type: integer
    type: object
  ds.DeleteFileReq:
    properties:
      extension:
        type: string
      filename:
        type: string
    type: object
  ds.DeleteParticipantReq:
    properties:
      email:
        type: string
    type: object
  ds.File:
    properties:
      extension:
        type: string
      file_path:
        type: string
      filename:
        type: string
      id:
        type: string
      project_id:
        type: string
      size:
        type: integer
      update_datetime:
        type: string
    type: object
  ds.GetCustomerEmailResponse:
    properties:
      email:
        type: string
    type: object
  ds.LoginCustomerReq:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  ds.Note:
    properties:
      content:
        type: string
      deadline:
        type: string
      id:
        type: string
      overdue:
        type: integer
      project_id:
        type: string
      title:
        type: string
      update_datetime:
        type: string
    type: object
  ds.Project:
    properties:
      admin_id:
        type: string
      capacity:
        type: integer
      creation_date:
        type: string
      id:
        type: string
      name:
        type: string
      owner_id:
        type: string
    type: object
  ds.ProjectData:
    properties:
      files:
        items:
          $ref: '#/definitions/ds.File'
        type: array
      notes:
        items:
          $ref: '#/definitions/ds.Note'
        type: array
    type: object
  ds.SignUpAdmin:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  ds.SignUpCustomerReq:
    properties:
      email:
        type: string
      first_name:
        type: string
      login:
        type: string
      password:
        type: string
      second_name:
        type: string
    type: object
  ds.UpdateParticipantAccessReq:
    properties:
      customer_access:
        type: string
      email:
        type: string
    type: object
  ds.UpdateProjectNameReq:
    properties:
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: mail@dump
  description: MK CLOUD backend service.
  title: MKC API
  version: "1.0"
paths:
  /admin/{project_id}/send:
    post:
      description: Получает электронную почту пользователя, владеющего проектом
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ds.GetCustomerEmailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BasicAuth: []
      summary: Получает электронную почту пользователя, владеющего проектом
      tags:
      - administrator
  /admin/attached:
    get:
      description: Возравщает все проекты которые прикреплены к администратору
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Project'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BasicAuth: []
      summary: Все проекты которые прикреплены к администратору
      tags:
      - administrator
  /admin/project/{project_id}:
    get:
      description: Прикрепляет администратора к выбраному проекту
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.successResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BasicAuth: []
      summary: Прикрепляет администратора к проекту
      tags:
      - administrator
    post:
      description: Добавляет администратора на сервис
      parameters:
      - description: Информация о администраторе
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/ds.SignUpAdmin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      summary: Добавляет администратора на сервис
      tags:
      - administrator
  /admin/unattached:
    get:
      description: Возвращает все проекты которые еще не прикреплены
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Project'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BasicAuth: []
      summary: Все проекты которые еще не прикреплены
      tags:
      - administrator
  /login:
    post:
      description: Login customer
      parameters:
      - description: Customer data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/ds.LoginCustomerReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.AuthToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      summary: Login customer
      tags:
      - auth
  /logout:
    get:
      description: Logout user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.successResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - auth
  /participants/{project_id}:
    delete:
      description: Removes participant from project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: CHANGE IT
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/ds.DeleteParticipantReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Customer'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Removes participant from project
      tags:
      - participants
    post:
      description: Adds participant to project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: CHANGE IT
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/ds.AddParticipantReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Customer'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Adds participant to project
      tags:
      - participants
    put:
      description: Updates participant access in project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: CHANGE IT
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/ds.UpdateParticipantAccessReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Customer'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Updates participant access in project
      tags:
      - participants
  /project:
    post:
      description: Creates customer project in storage
      parameters:
      - description: New project
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/ds.CreateProjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Project'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Creates customer project
      tags:
      - project
  /project/:project_id/note:
    post:
      description: Создание заявки в проекте и добавление записи в БД
      parameters:
      - description: New project
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/ds.CreateNoteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Note'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Создание заявки в проекте
      tags:
      - note
  /project/{project_id}:
    delete:
      description: Deletes project
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Project'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Deletes project
      tags:
      - project
    get:
      description: Получаем массив всех файлов и заметок
      parameters:
      - description: Идентификатор проекта
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ds.ProjectData'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Получаем информацию о содержании проекта
      tags:
      - project
    put:
      description: Updates project name
      parameters:
      - description: Project name
        in: path
        name: project_id
        required: true
        type: string
      - description: New project name
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/ds.UpdateProjectNameReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Project'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: obejct
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Updates project name
      tags:
      - project
  /project/{project_id}/file:
    delete:
      description: Удаляет файл с сервера и из БД
      parameters:
      - description: Идентификатор проекта
        in: path
        name: project_id
        required: true
        type: string
      - description: Структура хранящая тело запроса для удаления файла
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/ds.DeleteFileReq'
      produces:
      - application/json
      responses:
        "401":
          description: Unauthorized
          schema:
            type: obejct
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Удалить файл
      tags:
      - file
    post:
      consumes:
      - multipart/form-data
      description: Загружает файл на сервер
      parameters:
      - description: Идентификатор проекта
        in: path
        name: project_id
        required: true
        type: string
      - description: Файл для загрузки
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.File'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: obejct
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Загрузить файл
      tags:
      - file
  /project/{project_id}/file/{file_id}:
    get:
      consumes:
      - application/json
      description: Скачивает файл с сервера
      parameters:
      - description: Идентификатор проекта
        in: path
        name: project_id
        required: true
        type: string
      - description: Идентификатор файла
        in: path
        name: file_id
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Скачать файл
      tags:
      - file
  /project/{project_id}/files:
    get:
      consumes:
      - multipart/form-data
      description: Получить все файлы проекта
      parameters:
      - description: Идентификатор проекта
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.File'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: obejct
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Просмотреть все файлы проекта
      tags:
      - file
    post:
      consumes:
      - multipart/form-data
      description: Загружает файлы на сервер
      parameters:
      - description: Идентификатор проекта
        in: path
        name: project_id
        required: true
        type: string
      - description: Файлы для загрузки
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.File'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Загрузить файлы
      tags:
      - file
  /project/{project_id}/note/{note_id}:
    delete:
      description: Удаляет заметки из проекта и БД
      parameters:
      - description: Идентификатор проекта
        in: path
        name: project_id
        required: true
        type: string
      - description: Идентификатор заметки
        in: path
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Note'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: obejct
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Удалить заметку
      tags:
      - note
    put:
      description: Обновляет дедлайн заметки в БД
      parameters:
      - description: Идентификатор проекта
        in: path
        name: project_id
        required: true
        type: string
      - description: Идентификатор заметки
        in: path
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Note'
            type: array
        "400":
          description: Bad Request
          schema:
            type: obejct
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Обновить дедлайн заметки
      tags:
      - note
  /projects:
    get:
      description: Gets all customer projects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Project'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      security:
      - BearerAuth: []
      summary: Gets all customer projects
      tags:
      - project
  /signup:
    post:
      description: Signup customer
      parameters:
      - description: Customer data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/ds.SignUpCustomerReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.AuthToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.errorResponse'
      summary: Signup customer
      tags:
      - auth
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
